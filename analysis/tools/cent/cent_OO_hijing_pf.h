// /eos/cms/store/group/phys_heavyions/wangj/tracklet2025/MinBias_Hijing_OO_5362GeV/crab_pixel_250810_MINI_0731_Hijing_OO_5362GeV_pf_realistic_maskf.root
// pixel/PixelTree::hft

const int nBins=200;
const double binTable[nBins+1] = { 0., 1.51472, 2.11642, 2.63582, 3.08282, 3.47932, 3.88113, 4.26007, 4.62486, 4.96349, 
  5.2903, 5.60011, 5.91568, 6.21234, 6.50603, 6.80009, 7.08598, 7.35991, 7.64099, 7.9211, 
  8.19225, 8.47984, 8.75426, 9.03923, 9.32173, 9.60141, 9.89258, 10.1893, 10.4803, 10.784, 
  11.0888, 11.407, 11.7202, 12.0478, 12.3759, 12.7097, 13.0401, 13.3798, 13.7216, 14.0583, 
  14.4024, 14.7776, 15.1451, 15.5203, 15.9157, 16.3077, 16.6973, 17.0968, 17.5104, 17.9273, 
  18.3542, 18.7912, 19.2341, 19.6924, 20.1704, 20.6502, 21.148, 21.6526, 22.1684, 22.6815, 
  23.2134, 23.7563, 24.2965, 24.8363, 25.3841, 25.949, 26.5428, 27.1425, 27.7647, 28.4001, 
  29.0345, 29.6907, 30.3673, 31.0534, 31.7459, 32.479, 33.222, 33.9729, 34.7544, 35.5432, 
  36.3476, 37.1443, 37.961, 38.7998, 39.6628, 40.5514, 41.4483, 42.3443, 43.2978, 44.2424, 
  45.2031, 46.1728, 47.2081, 48.2464, 49.3222, 50.4101, 51.4932, 52.5559, 53.6633, 54.7772, 
  55.9069, 57.0921, 58.2545, 59.4943, 60.7218, 61.9807, 63.2345, 64.5486, 65.8889, 67.2555, 
  68.6496, 69.9819, 71.4478, 72.8935, 74.36, 75.8327, 77.3747, 78.9432, 80.547, 82.2111, 
  83.846, 85.5479, 87.2099, 88.9135, 90.7325, 92.5759, 94.467, 96.2741, 98.1348, 100.062, 
  102.068, 104.183, 106.212, 108.371, 110.452, 112.643, 114.843, 117.131, 119.457, 121.768, 
  124.082, 126.535, 129.11, 131.629, 134.238, 136.862, 139.493, 142.206, 144.908, 147.765, 
  150.776, 153.761, 156.747, 159.781, 162.909, 166.156, 169.421, 172.635, 176.017, 179.354, 
  182.776, 186.351, 189.976, 193.632, 197.342, 201.101, 204.944, 208.934, 213.002, 217.078, 
  221.09, 225.303, 229.603, 234.148, 238.66, 243.099, 247.89, 252.684, 257.71, 262.985, 
  268.249, 273.527, 279.102, 284.773, 290.732, 296.673, 303.185, 309.995, 316.939, 324.321, 
  332.318, 340.477, 349.524, 359.402, 370.368, 382.682, 396.964, 414.835, 436.861, 471.3, 
  20000};

static const float hf[21] = {
  0., 5.2903, 8.19225, 11.0888, 14.4024, 
  18.3542, 23.2134, 29.0345, 36.3476, 45.2031, 
  55.9069, 68.6496, 83.846, 102.068, 124.082, 
  150.776, 182.776, 221.09, 268.249, 332.318, 
  20000
};

int getHiBinFromhiHF(const double hft) { 
  int binPos = -1; 
  for (int i = 0; i < nBins; ++i) { 
    if (hft >= binTable[i] && hft < binTable[i+1]) { 
      binPos = i; 
      break; 
    } 
  } 
 
  binPos = nBins - 1 - binPos; 
 
  return (int)(200*((double)binPos)/((double)nBins)); 
}
