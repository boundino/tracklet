// /eos/cms/store/group/phys_heavyions/wangj/tracklet2025/MinBias_AMPT_NoStringMelting_OO_5362GeV/crab_pixel_250809_MINI_0731_AMPT_NoStringMelting_OO_5362GeV_pf_realistic_maskf.root
// pixel/PixelTree::hft

const int nBins=200;
const double binTable[nBins+1] = { 0., 3.16347, 4.05403, 4.74019, 5.37929, 6.00484, 6.63197, 7.22903, 7.78419, 8.31146, 
  8.82339, 9.33531, 9.82788, 10.3643, 10.8238, 11.2751, 11.7233, 12.1853, 12.6345, 13.0447, 
  13.4794, 13.8814, 14.2709, 14.7052, 15.1357, 15.5666, 15.9732, 16.3994, 16.8391, 17.2661, 
  17.7008, 18.1177, 18.5551, 18.9695, 19.3966, 19.847, 20.3193, 20.7556, 21.2148, 21.7349, 
  22.2351, 22.7204, 23.2807, 23.8058, 24.4102, 24.9234, 25.5141, 26.0937, 26.6593, 27.2515, 
  27.8522, 28.4841, 29.1587, 29.7803, 30.437, 31.1088, 31.7682, 32.4652, 33.2132, 33.9395, 
  34.7725, 35.59, 36.3645, 37.1347, 37.9323, 38.7311, 39.5989, 40.4469, 41.2357, 42.1828, 
  43.0941, 44.0554, 44.9459, 45.7892, 46.7518, 47.7987, 48.787, 49.9294, 50.9553, 52.0834, 
  53.1595, 54.2132, 55.3675, 56.586, 57.7459, 58.9409, 60.1418, 61.3953, 62.589, 63.8273, 
  65.121, 66.3277, 67.5948, 68.9528, 70.2863, 71.7057, 73.2444, 74.8388, 76.4323, 77.8738, 
  79.4544, 80.9754, 82.5834, 84.118, 85.735, 87.3384, 89.1051, 90.9002, 92.6379, 94.2798, 
  96.1425, 98.004, 99.9253, 101.94, 103.756, 105.705, 107.677, 109.625, 111.615, 113.675, 
  115.889, 117.925, 119.93, 122.184, 124.332, 126.585, 128.766, 131.155, 133.569, 135.941, 
  138.372, 141.001, 143.588, 146.228, 148.942, 151.663, 154.363, 157.145, 159.797, 162.587, 
  165.57, 168.495, 171.567, 174.879, 177.975, 181.207, 184.477, 187.719, 191.093, 194.517, 
  197.985, 201.305, 204.839, 208.359, 212.021, 215.44, 219.149, 222.996, 226.979, 230.999, 
  235.095, 239.324, 243.366, 247.536, 251.632, 255.945, 260.246, 264.735, 269.399, 274.343, 
  278.624, 283.425, 288.566, 293.028, 298.435, 303.451, 308.857, 314.316, 319.703, 325.353, 
  331.512, 337.579, 344.138, 350.5, 357.327, 364.083, 371.257, 379.093, 386.49, 394.933, 
  403.743, 412.804, 422.748, 432.795, 444.234, 457.641, 473.613, 491.102, 513.915, 548.503, 
  20000};

static const float hf[21] = {
  0., 8.82339, 13.4794, 17.7008, 22.2351, 
  27.8522, 34.7725, 43.0941, 53.1595, 65.121, 
  79.4544, 96.1425, 115.889, 138.372, 165.57, 
  197.985, 235.095, 278.624, 331.512, 403.743, 
  20000
};

int getHiBinFromhiHF(const double hft) { 
  int binPos = -1; 
  for (int i = 0; i < nBins; ++i) { 
    if (hft >= binTable[i] && hft < binTable[i+1]) { 
      binPos = i; 
      break; 
    } 
  } 
 
  binPos = nBins - 1 - binPos; 
 
  return (int)(200*((double)binPos)/((double)nBins)); 
}
