// /eos/cms/store/group/phys_heavyions/wangj/Forest2025/Hijing_MinimumBias_b015_OO_5362GeV/crab_HiForest_250520_Hijing_MinimumBias_b015_OO_5362GeV_250518.root
// hiEvtAnalyzer/HiTree
// hiHF_pf

const int nBins=200;
const double binTable[nBins+1] = { 0., 1.48776, 2.11119, 2.63466, 3.0793, 3.48941, 3.8806, 4.25073, 4.60687, 4.95009, 
  5.2731, 5.5905, 5.89812, 6.20616, 6.50117, 6.78687, 7.06615, 7.34557, 7.62602, 7.90196, 
  8.17859, 8.46188, 8.7397, 9.01018, 9.28912, 9.56567, 9.85823, 10.1511, 10.449, 10.7427, 
  11.0476, 11.3478, 11.6658, 11.9787, 12.2991, 12.6259, 12.9566, 13.2916, 13.6313, 13.9788, 
  14.3345, 14.6982, 15.0742, 15.4562, 15.8396, 16.2348, 16.6283, 17.0421, 17.4617, 17.8918, 
  18.3212, 18.7681, 19.2346, 19.7037, 20.1685, 20.6485, 21.134, 21.6248, 22.1427, 22.6651, 
  23.1956, 23.7349, 24.2846, 24.8466, 25.43, 26.007, 26.6183, 27.2169, 27.8176, 28.4655, 
  29.1051, 29.7523, 30.4219, 31.1124, 31.7931, 32.4956, 33.2326, 33.9639, 34.7246, 35.5106, 
  36.2896, 37.1021, 37.9366, 38.7731, 39.6322, 40.4902, 41.3674, 42.276, 43.2067, 44.1518, 
  45.1307, 46.0984, 47.0831, 48.092, 49.1265, 50.1996, 51.2808, 52.3682, 53.4679, 54.5868, 
  55.7203, 56.9056, 58.1208, 59.3639, 60.62, 61.8835, 63.1496, 64.4499, 65.7896, 67.1494, 
  68.5287, 69.9436, 71.3651, 72.799, 74.3064, 75.7978, 77.3596, 78.9258, 80.5262, 82.1334, 
  83.7935, 85.4469, 87.1688, 88.9103, 90.6332, 92.4373, 94.3347, 96.1964, 98.0935, 100.062, 
  102.045, 104.079, 106.105, 108.194, 110.364, 112.559, 114.747, 116.972, 119.271, 121.667, 
  124.048, 126.472, 128.893, 131.477, 134.103, 136.749, 139.435, 142.103, 144.889, 147.796, 
  150.691, 153.576, 156.542, 159.561, 162.655, 165.752, 168.968, 172.186, 175.541, 178.95, 
  182.361, 185.887, 189.462, 193.227, 196.864, 200.629, 204.425, 208.312, 212.38, 216.417, 
  220.553, 224.777, 229.141, 233.607, 238.204, 242.804, 247.531, 252.411, 257.439, 262.602, 
  267.886, 273.314, 278.88, 284.561, 290.463, 296.644, 302.984, 309.822, 316.767, 324.2, 
  332.169, 340.574, 349.472, 359.265, 369.808, 382.068, 396.545, 413.756, 436.361, 471.247, 
  20000};

static const float hf[21] = { 0., 5.2731, 8.17859, 11.0476, 14.3345, 
  18.3212, 23.1956, 29.1051, 36.2896, 45.1307, 
  55.7203, 68.5287, 83.7935, 102.045, 124.048, 
  150.691, 182.361, 220.553, 267.886, 332.169, 
  20000
};

int getHiBinFromhiHF(const double hiHF_pf) { 
  int binPos = -1; 
  for (int i = 0; i < nBins; ++i) { 
    if (hiHF_pf >= binTable[i] && hiHF_pf < binTable[i+1]) { 
      binPos = i; 
      break; 
    } 
  } 
 
  binPos = nBins - 1 - binPos; 
 
  return (int)(200*((double)binPos)/((double)nBins)); 
}
