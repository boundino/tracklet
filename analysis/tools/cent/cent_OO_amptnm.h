// /eos/cms/store/group/phys_heavyions/wangj/tracklet2025/private/MinBias_AMPT_NoStringMelting_b015_OO_5362GeV.root
// pixel/PixelTree
// hft

const int nBins=200;
const double binTable[nBins+1] = { 0., 13.3836, 14.0975, 14.6797, 15.2214, 15.7242, 16.2254, 16.726, 17.203, 17.6736, 
  18.1307, 18.5583, 18.9617, 19.3526, 19.7239, 20.0956, 20.4485, 20.8002, 21.1452, 21.4829, 
  21.8133, 22.1367, 22.4814, 22.8265, 23.1701, 23.495, 23.8259, 24.1659, 24.5099, 24.8666, 
  25.2425, 25.6011, 25.9729, 26.3586, 26.7332, 27.1146, 27.5099, 27.9203, 28.3378, 28.7684, 
  29.195, 29.6493, 30.0939, 30.5487, 31.0081, 31.4928, 31.99, 32.5043, 33.03, 33.5528, 
  34.0879, 34.633, 35.1805, 35.7374, 36.3319, 36.914, 37.5164, 38.1444, 38.7675, 39.3879, 
  40.0585, 40.7394, 41.393, 42.0821, 42.7915, 43.478, 44.2197, 44.9682, 45.7347, 46.4965, 
  47.285, 48.0742, 48.9011, 49.741, 50.6239, 51.5013, 52.378, 53.2702, 54.2056, 55.1436, 
  56.1065, 57.0645, 58.0782, 59.1151, 60.1755, 61.2261, 62.3204, 63.3989, 64.5591, 65.6688, 
  66.8129, 68.0193, 69.2378, 70.4281, 71.733, 72.9728, 74.2854, 75.5738, 76.9409, 78.3386, 
  79.7423, 81.1668, 82.5621, 83.9979, 85.5208, 87.0431, 88.6142, 90.1683, 91.7867, 93.3497, 
  94.9917, 96.6535, 98.3636, 100.106, 101.86, 103.663, 105.484, 107.375, 109.296, 111.18, 
  113.107, 115.163, 117.224, 119.303, 121.406, 123.54, 125.741, 127.995, 130.223, 132.519, 
  134.809, 137.215, 139.749, 142.275, 144.759, 147.301, 149.937, 152.486, 155.172, 157.928, 
  160.812, 163.722, 166.783, 169.693, 172.684, 175.808, 178.916, 181.901, 185.182, 188.581, 
  191.999, 195.419, 198.906, 202.461, 206.037, 209.615, 213.304, 217.042, 220.858, 224.822, 
  228.69, 232.653, 236.936, 241.12, 245.462, 249.899, 254.316, 258.731, 263.335, 267.858, 
  272.688, 277.469, 282.428, 287.375, 292.563, 297.778, 303.195, 308.557, 314.164, 320.146, 
  325.984, 331.983, 338.469, 344.862, 351.469, 358.309, 365.754, 373.082, 380.904, 389.223, 
  397.565, 406.71, 416.915, 427.506, 439.226, 452.594, 468.408, 487.104, 511.009, 549.085, 
  20000};

static const float hf[21] = {
  0., 18.1307, 21.8133, 25.2425, 29.195, 
  34.0879, 40.0585, 47.285, 56.1065, 66.8129, 
  79.7423, 94.9917, 113.107, 134.809, 160.812, 
  191.999, 228.69, 272.688, 325.984, 397.565, 
  20000
};

int getHiBinFromhiHF(const double hft) { 
  int binPos = -1; 
  for (int i = 0; i < nBins; ++i) { 
    if (hft >= binTable[i] && hft < binTable[i+1]) { 
      binPos = i; 
      break; 
    } 
  } 
 
  binPos = nBins - 1 - binPos; 
 
  return (int)(200*((double)binPos)/((double)nBins)); 
}
