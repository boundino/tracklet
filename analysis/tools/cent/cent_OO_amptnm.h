// /eos/cms/store/group/phys_heavyions/wangj/tracklet2025/private/AMPT_NoPU_100kEvents_OO_5360GeV_GenSim_032525.root

const int nBins=200;
const double binTable[nBins+1] = { 0., 12.5549, 13.1393, 13.62, 14.0297, 14.3899, 14.7724, 15.1039, 15.4572, 15.7736, 
16.0957, 16.4139, 16.7077, 17.0198, 17.3074, 17.5904, 17.8807, 18.1552, 18.4442, 18.7249, 
19.0075, 19.2688, 19.538, 19.8155, 20.0859, 20.3667, 20.6314, 20.9283, 21.2248, 21.5187, 
21.8118, 22.1262, 22.4347, 22.7486, 23.0486, 23.3595, 23.6637, 23.9945, 24.3248, 24.6738, 
25.008, 25.3778, 25.7508, 26.1074, 26.4943, 26.8721, 27.2807, 27.6774, 28.0906, 28.5245, 
28.9701, 29.4208, 29.8572, 30.2766, 30.7672, 31.2187, 31.7101, 32.1648, 32.6377, 33.1401, 
33.6399, 34.2208, 34.7657, 35.2968, 35.8745, 36.4171, 37.0371, 37.5999, 38.2061, 38.8248, 
39.4669, 40.1825, 40.8169, 41.5208, 42.1874, 42.9446, 43.6954, 44.3828, 45.1005, 45.953, 
46.7693, 47.5674, 48.3926, 49.2077, 49.9973, 50.8232, 51.7102, 52.4926, 53.4239, 54.2787, 
55.3394, 56.281, 57.2302, 58.1929, 59.1976, 60.1762, 61.2397, 62.2149, 63.2843, 64.3581, 
65.4463, 66.624, 67.8789, 69.1067, 70.1854, 71.461, 72.7003, 73.9399, 75.2727, 76.5127, 
77.8147, 79.1447, 80.4824, 81.9598, 83.4546, 84.9533, 86.4639, 87.9691, 89.4789, 91.0735, 
92.6067, 94.3472, 95.9906, 97.6521, 99.3968, 101.001, 102.905, 104.774, 106.562, 108.377, 
110.293, 112.226, 114.261, 116.224, 118.291, 120.315, 122.392, 124.607, 126.754, 128.939, 
131.179, 133.467, 135.66, 138.017, 140.625, 143.02, 145.358, 148.047, 150.755, 153.351, 
156.001, 158.73, 161.436, 163.978, 166.923, 169.635, 172.383, 174.953, 178.167, 181.162, 
184.397, 187.597, 190.804, 194.314, 197.843, 201.397, 204.895, 208.446, 212.224, 215.97, 
219.642, 223.665, 227.759, 231.916, 235.743, 240.012, 244.521, 249.144, 253.357, 258.04, 
262.947, 267.983, 272.936, 278.143, 284.118, 289.316, 295.233, 302.017, 308.702, 315.141, 
322.711, 330.124, 338.448, 347.733, 357.986, 369.899, 383.146, 398.017, 419.814, 451.047, 
20000};

static const float hf[21] = { 0., 16.0957, 19.0075, 21.8118, 25.008, 
28.9701, 33.6399, 39.4669, 46.7693, 55.3394, 
65.4463, 77.8147, 92.6067, 110.293, 131.179, 
156.001, 184.397, 219.642, 262.947, 322.711, 
20000
};

int getHiBinFromhiHF(const double hiHF) { 
  int binPos = -1; 
  for (int i = 0; i < nBins; ++i) { 
    if (hiHF >= binTable[i] && hiHF < binTable[i+1]) { 
      binPos = i; 
      break; 
    } 
  } 
 
  binPos = nBins - 1 - binPos; 
 
  return (int)(200*((double)binPos)/((double)nBins)); 
}
