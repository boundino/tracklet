// /eos/cms/store/group/phys_heavyions/wangj/tracklet2025/MinBias_EposLHC_ReggeGribovParton_OO_5362GeV/crab_pixel_250809_MINI_0731_EposLHC_ReggeGribovParton_OO_5362GeV_pf_realistic_maskf.root
// pixel/PixelTree::hft

const int nBins=200;
const double binTable[nBins+1] = { 0., 1.20262, 1.47067, 1.76845, 2.04697, 2.35954, 2.70509, 3.03867, 3.38383, 3.71461, 
  4.06927, 4.41196, 4.74707, 5.07591, 5.371, 5.66862, 5.99565, 6.30211, 6.5929, 6.87378, 
  7.16699, 7.4671, 7.77724, 8.07016, 8.38045, 8.67274, 8.98164, 9.28435, 9.59013, 9.9359, 
  10.2395, 10.5664, 10.9262, 11.2613, 11.6157, 12.0198, 12.3716, 12.759, 13.1232, 13.5179, 
  13.9278, 14.3098, 14.6997, 15.1066, 15.5325, 15.9695, 16.3761, 16.856, 17.3326, 17.82, 
  18.2518, 18.7188, 19.1679, 19.6805, 20.1996, 20.7221, 21.2436, 21.7877, 22.2645, 22.8276, 
  23.3585, 23.9493, 24.4864, 25.0519, 25.6632, 26.2569, 26.8451, 27.4778, 28.1434, 28.7948, 
  29.431, 30.0939, 30.7316, 31.3664, 32.0467, 32.7433, 33.4427, 34.1941, 34.9551, 35.6864, 
  36.3991, 37.1342, 37.8449, 38.6826, 39.4463, 40.2146, 41.017, 41.8301, 42.5909, 43.4092, 
  44.2816, 45.0986, 45.9389, 46.7821, 47.7175, 48.6718, 49.5872, 50.4912, 51.3512, 52.3066, 
  53.27, 54.2722, 55.2536, 56.2548, 57.2648, 58.3397, 59.4319, 60.4931, 61.5396, 62.7412, 
  63.7594, 64.8533, 66.0355, 67.1365, 68.2759, 69.5601, 70.8065, 71.9285, 73.0595, 74.3316, 
  75.594, 76.9437, 78.2485, 79.6753, 81.0874, 82.496, 83.8525, 85.4097, 86.838, 88.2776, 
  89.8209, 91.228, 92.8694, 94.4698, 96.0601, 97.7258, 99.4895, 101.095, 102.73, 104.492, 
  106.143, 107.886, 109.632, 111.475, 113.411, 115.168, 117.048, 118.932, 120.677, 122.701, 
  124.693, 126.889, 128.868, 130.901, 133.032, 135.141, 137.351, 139.64, 141.931, 144.259, 
  146.661, 148.998, 151.155, 153.426, 155.792, 158.478, 160.948, 163.61, 166.2, 168.852, 
  171.446, 173.957, 176.741, 179.616, 182.535, 185.672, 188.773, 191.84, 194.974, 198.306, 
  201.813, 205.1, 208.734, 212.728, 216.496, 220.912, 225.286, 229.551, 234.253, 239.304, 
  244.469, 250.435, 256.532, 263.239, 270.948, 279.582, 289.278, 300.898, 316.257, 339.373, 
  20000};

static const float hf[21] = {
  0., 4.06927, 7.16699, 10.2395, 13.9278, 
  18.2518, 23.3585, 29.431, 36.3991, 44.2816, 
  53.27, 63.7594, 75.594, 89.8209, 106.143, 
  124.693, 146.661, 171.446, 201.813, 244.469, 
  20000
};

int getHiBinFromhiHF(const double hft) { 
  int binPos = -1; 
  for (int i = 0; i < nBins; ++i) { 
    if (hft >= binTable[i] && hft < binTable[i+1]) { 
      binPos = i; 
      break; 
    } 
  } 
 
  binPos = nBins - 1 - binPos; 
 
  return (int)(200*((double)binPos)/((double)nBins)); 
}
