// /eos/cms/store/group/phys_heavyions/wangj/tracklet2025/MinBias_AMPT_StringMelting_OO_5362GeV/crab_pixel_250809_MINI_0731_AMPT_StringMelting_OO_5362GeV_pf_realistic_maskf.root
// pixel/PixelTree::hft

const int nBins=200;
const double binTable[nBins+1] = { 0., 3.18159, 4.07178, 4.80161, 5.43207, 6.04765, 6.63449, 7.23625, 7.81406, 8.38538, 
  8.91817, 9.43758, 9.94185, 10.4168, 10.9147, 11.3864, 11.8355, 12.2834, 12.7292, 13.1523, 
  13.5791, 13.9895, 14.405, 14.8332, 15.2475, 15.6637, 16.09, 16.5144, 16.9511, 17.3786, 
  17.8254, 18.2756, 18.726, 19.1848, 19.6554, 20.1214, 20.5903, 21.0964, 21.6035, 22.1138, 
  22.6448, 23.169, 23.7028, 24.2323, 24.782, 25.3679, 25.9479, 26.5338, 27.1454, 27.7619, 
  28.3919, 29.0179, 29.6742, 30.3355, 31.026, 31.7423, 32.4706, 33.1935, 33.9294, 34.6848, 
  35.462, 36.2447, 37.0441, 37.8469, 38.6544, 39.4725, 40.3541, 41.2278, 42.0822, 42.9964, 
  43.9218, 44.8583, 45.8397, 46.8318, 47.8558, 48.8725, 49.9279, 50.9967, 52.086, 53.172, 
  54.2695, 55.4042, 56.5657, 57.7452, 58.9764, 60.1582, 61.4227, 62.6647, 63.9996, 65.301, 
  66.6403, 67.9704, 69.3378, 70.748, 72.1912, 73.7086, 75.2493, 76.793, 78.3542, 79.954, 
  81.4559, 83.0747, 84.7258, 86.3924, 88.1179, 89.8508, 91.6528, 93.4323, 95.326, 97.2278, 
  99.1043, 101.079, 103.048, 104.992, 107.007, 109.051, 111.141, 113.269, 115.45, 117.643, 
  119.88, 122.142, 124.458, 126.864, 129.23, 131.618, 134.084, 136.571, 139.129, 141.712, 
  144.381, 147.18, 149.985, 152.773, 155.577, 158.491, 161.5, 164.561, 167.525, 170.564, 
  173.718, 176.895, 180.165, 183.588, 186.871, 190.326, 193.877, 197.409, 200.928, 204.593, 
  208.363, 211.986, 215.88, 219.696, 223.676, 227.691, 231.875, 235.914, 240.227, 244.421, 
  248.856, 253.341, 257.887, 262.487, 267.239, 272.074, 276.844, 281.713, 286.765, 291.812, 
  296.929, 302.292, 307.655, 313.335, 318.949, 324.711, 330.501, 336.496, 342.638, 348.759, 
  354.901, 361.584, 368.252, 375.175, 382.269, 389.929, 397.744, 405.734, 414.059, 422.975, 
  432.464, 442.209, 453.068, 464.894, 477.535, 492.263, 508.774, 529.533, 556.354, 597.921, 
  20000};

static const float hf[21] = {
  0., 8.91817, 13.5791, 17.8254, 22.6448, 
  28.3919, 35.462, 43.9218, 54.2695, 66.6403, 
  81.4559, 99.1043, 119.88, 144.381, 173.718, 
  208.363, 248.856, 296.929, 354.901, 432.464, 
  20000
};

int getHiBinFromhiHF(const double hft) { 
  int binPos = -1; 
  for (int i = 0; i < nBins; ++i) { 
    if (hft >= binTable[i] && hft < binTable[i+1]) { 
      binPos = i; 
      break; 
    } 
  } 
 
  binPos = nBins - 1 - binPos; 
 
  return (int)(200*((double)binPos)/((double)nBins)); 
}
