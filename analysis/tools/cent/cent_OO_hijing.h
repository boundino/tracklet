// /eos/cms/store/group/phys_heavyions/wangj/tracklet2025/private/MinBias_Hijing_b015_OO_5362GeV.root
// pixel/PixelTree
// hft

const int nBins=200;
const double binTable[nBins+1] = { 0., 11.8171, 12.5143, 13.0543, 13.5197, 13.9446, 14.3547, 14.7217, 15.0814, 15.4432, 
  15.7764, 16.093, 16.406, 16.702, 17.0074, 17.3171, 17.6037, 17.89, 18.1696, 18.4455, 
  18.7361, 19.0236, 19.3105, 19.5987, 19.8812, 20.1717, 20.4592, 20.7542, 21.0477, 21.3489, 
  21.6511, 21.9735, 22.286, 22.5875, 22.9085, 23.2493, 23.5985, 23.9421, 24.3018, 24.6478, 
  25.0081, 25.3764, 25.7532, 26.1381, 26.5216, 26.9181, 27.3399, 27.7417, 28.1775, 28.6091, 
  29.0679, 29.5342, 30.0022, 30.4674, 30.9434, 31.4088, 31.91, 32.4164, 32.9501, 33.4997, 
  34.0489, 34.6195, 35.1726, 35.7456, 36.3329, 36.9226, 37.506, 38.1223, 38.7514, 39.4081, 
  40.0685, 40.7408, 41.4134, 42.0888, 42.7848, 43.5124, 44.2519, 45.021, 45.7398, 46.5251, 
  47.3239, 48.1424, 48.9648, 49.7953, 50.6614, 51.5482, 52.4544, 53.3664, 54.3045, 55.2462, 
  56.206, 57.189, 58.2387, 59.2859, 60.3446, 61.3748, 62.4723, 63.5579, 64.6926, 65.8347, 
  66.9879, 68.1923, 69.3921, 70.6254, 71.86, 73.1352, 74.4434, 75.7964, 77.1902, 78.5612, 
  79.9426, 81.348, 82.7704, 84.3103, 85.8424, 87.3358, 88.9149, 90.4549, 92.0394, 93.7147, 
  95.446, 97.1663, 98.857, 100.674, 102.451, 104.335, 106.205, 108.148, 110.028, 111.998, 
  114.072, 116.249, 118.374, 120.476, 122.678, 124.939, 127.174, 129.449, 131.786, 134.179, 
  136.605, 139.055, 141.562, 144.098, 146.714, 149.341, 151.966, 154.721, 157.534, 160.362, 
  163.303, 166.287, 169.24, 172.431, 175.58, 178.773, 181.983, 185.352, 188.609, 192.015, 
  195.586, 199.176, 202.837, 206.483, 210.133, 214.08, 218.116, 222.141, 226.21, 230.454, 
  234.72, 238.998, 243.557, 248.001, 252.447, 257.09, 261.963, 266.965, 272.091, 277.351, 
  282.704, 288.238, 293.93, 299.728, 305.799, 312.137, 318.723, 325.611, 332.797, 340.456, 
  348.306, 356.883, 366.258, 375.96, 387.122, 399.295, 413.728, 430.846, 455.024, 491.917, 
  20000};

static const float hf[21] = {
0., 15.7764, 18.7361, 21.6511, 25.0081, 
  29.0679, 34.0489, 40.0685, 47.3239, 56.206, 
  66.9879, 79.9426, 95.446, 114.072, 136.605, 
  163.303, 195.586, 234.72, 282.704, 348.306, 
  20000
};

int getHiBinFromhiHF(const double hft) { 
  int binPos = -1; 
  for (int i = 0; i < nBins; ++i) { 
    if (hft >= binTable[i] && hft < binTable[i+1]) { 
      binPos = i; 
      break; 
    } 
  } 
 
  binPos = nBins - 1 - binPos; 
 
  return (int)(200*((double)binPos)/((double)nBins)); 
}
